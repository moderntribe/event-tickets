sudo: required

language: php

notifications:
  email: false

php:
  - '7.0'

services:
  - mysql
  - docker

addons:
  apt:
    packages:
      # needed for Nginx
      - libjpeg-dev
      - libpng12-dev
      - php5-fpm
      - php5-mysql
      - nginx
  hosts:
    # resolve the following domains to localhost
    - tribe.localhost
    - chromedriver

# disable the default submodule logic
git:
  submodules: false

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

env:
  global:
    - WP_VERSION="latest"
    - WP_ROOT_FOLDER="/tmp/wordpress"
    - WP_URL="http://tribe.localhost"
    - WP_DOMAIN="tribe.localhost"
    - WP_TABLE_PREFIX="wp_"
    - DB_NAME="wp"
    - TEST_DB_NAME="test"
    - WP_ADMIN_USERNAME="admin"
    - WP_ADMIN_PASSWORD="password"

before_install:
  # create the databases needed for the tests
  - mysql -e "create database IF NOT EXISTS $DB_NAME;" -uroot
  - mysql -e "create database IF NOT EXISTS $TEST_DB_NAME;" -uroot

  # tweak git to correctly work with submodules
  - sed -i 's/git@github.com:/git:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive

install:
  # disable XDebug to speed up the tests
  - phpenv config-rm xdebug.ini
  - composer update --prefer-dist

before_script:
  # set up folders
  - mkdir -p /tmp/tools $WP_ROOT_FOLDER

  # install wp-cli
  - wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -P /tmp/tools/
  - chmod +x /tmp/tools/wp-cli.phar && mv /tmp/tools/wp-cli.phar /tmp/tools/wp
  - export PATH=$PATH:/tmp/tools:vendor/bin

  # install WordPress in the `wordpress` folder
  - cd $WP_ROOT_FOLDER
  - wp core download --version=$WP_VERSION
  - wp config create --dbname="$DB_NAME" --dbuser="root" --dbpass="" --dbhost="127.0.0.1" --dbprefix="$WP_TABLE_PREFIX"
  - wp core install --url="$WP_URL" --title="TEC Tests" --admin_user="$WP_ADMIN_USERNAME" --admin_password="$WP_ADMIN_PASSWORD" --admin_email="admin@$WP_DOMAIN" --skip-email

  # clone The Events Calendar in the plugins folder
  - cd wp-content/plugins
  - git clone --branch=master https://github.com/moderntribe/the-events-calendar.git the-events-calendar
  - cd the-events-calendar
  - git fetch
  # if the plugin has the current branch as a remote use that
  - export HAS_BRANCH=$(git branch -r | grep $TRAVIS_PULL_REQUEST_BRANCH) && echo "Found current branch - $HAS_BRANCH"
  - export HAS_TRAVIS_BRANCH=$(git branch -r | grep $TRAVIS_BRANCH) && echo "Found Travis Branch - $TRAVIS_BRANCH"
  - if [ ! -z $HAS_BRANCH ]; then $(git checkout $TRAVIS_PULL_REQUEST_BRANCH >/dev/null); else if [ ! -z $HAS_TRAVIS_BRANCH ]; then $(git checkout $TRAVIS_BRANCH >/dev/null); fi; fi
  - sed -i 's/git@github.com:/git:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive

  # get back to the build folder
  - cd $TRAVIS_BUILD_DIR

  # copy the Nginx configuration file to the available sites
  - sudo cp tests/_support/travis/nginx.conf /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_ROOT_FOLDER%?$WP_ROOT_FOLDER?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN
  - sudo sed -e "s?%WP_DOMAIN%?$WP_DOMAIN?g" --in-place /etc/nginx/sites-available/$WP_DOMAIN

  # enable the site
  - sudo ln -s /etc/nginx/sites-available/$WP_DOMAIN /etc/nginx/sites-enabled/

  # move the plugin into WordPress folder
  - mv $TRAVIS_BUILD_DIR $WP_ROOT_FOLDER/wp-content/plugins/event-tickets
  - export PLUGIN_DIR="$WP_ROOT_FOLDER/wp-content/plugins/event-tickets"

  # activate the plugins in WordPress
  - cd $WP_ROOT_FOLDER

  - wp plugin activate the-events-calendar event-tickets

  # flush rewrite rules
  - wp rewrite structure '/%postname%/' --hard

  # skip the welcome page redirection
  - wp option add tribe_skip_welcome 1

  # export a dump of the just installed database to the _data folder
  - wp db export $PLUGIN_DIR/tests/_data/dump.sql

  # get back to the plugin dir
  - cd $PLUGIN_DIR

  # localize the REST v1 database dump replacing its URL
  - bash tests/_support/travis/dump-replace.sh

  # restart Nnginx and PHP-FPM services
  - sudo service php5-fpm restart
  - sudo service nginx restart

  # start the Chromedriver image; port is 4444 - WIP
  # - docker run --name chromedriver -P -d robcherry/docker-chromedriver:latest

script:
  - codecept run unit
  - codecept run wpunit
  - codecept run integration
  - codecept run functional
  # copy the whole WordPress installation folder as a "dependency" of the plugin
  - cp -r ${WP_ROOT_FOLDER} ${PLUGIN_DIR}/wordpress
  # replace the WordPress configuration file with one that will work in the Docker
  - rm ${PLUGIN_DIR}/wordpress/wp-config.php && cp tests/_support/travis/wp-config.php ${PLUGIN_DIR}/wordpress/wp-config.php
  # execute the restv1 tests in Docker containers to speed them up, but before update the WordPress config file to match
  - docker-compose run -f tests/_support/travis/docker-compose.yml --project-name test-restv1-attendee run -d --rm codecept run tests/restv1/Attendee
  - docker-compose run -f tests/_support/travis/docker-compose.yml --project-name test-restv1-common run -d --rm codecept run tests/restv1/Common
  - docker-compose run -f tests/_support/travis/docker-compose.yml --project-name test-restv1-paypal run -d --rm codecept run tests/restv1/PayPal
  - docker-compose run -f tests/_support/travis/docker-compose.yml --project-name test-restv1-rsvp run -d --rm codecept run tests/restv1/RSVP
  - docker-compose run -f tests/_support/travis/docker-compose.yml --project-name test-restv1-ticket run -d --rm codecept run tests/restv1/Ticket
  # - codecept run acceptance - WIP
